name: Test

on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always
  RUST_VERSION: "1.86.0"

jobs:
  build:
    name: Build (${{ matrix.target.target }}, ${{ matrix.feature }})
    runs-on: ${{ matrix.target.os }}
    strategy:
      fail-fast: false
      matrix:
        target:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
          - os: ubuntu-latest
            target: aarch64-unknown-linux-gnu
            cross: true
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc
          - os: windows-latest
            target: aarch64-pc-windows-msvc
            test: false # cross-compilation is not required, but we can't test it natively
        feature: [cli, server]
    steps:
      - uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: ${{ env.RUST_VERSION }}
          targets: ${{ matrix.target.target }}

      - uses: Swatinem/rust-cache@v2

      - name: Install cross
        if: matrix.target.cross
        run: |
          cargo install cross --git https://github.com/cross-rs/cross

      - name: Install macOS dependencies
        if: matrix.target.os == 'macos-latest'
        run: |
          brew install pkg-config openssl@3

      - name: Build project (native)
        if: ${{ !matrix.target.cross }} # default to false if not set
        run: cargo build --target ${{ matrix.target.target }} --features ${{ matrix.feature }}

      - name: Build project (cross-compilation)
        if: matrix.target.cross
        run: cross build --release --target=${{ matrix.target.target }} --features ${{ matrix.feature }},vendored-openssl

      - name: Install nextest
        if: ${{ !matrix.target.cross }} # default to false if not set
        uses: taiki-e/install-action@nextest

      - name: Run tests (native)
        if: (matrix.target.cross != true) && (matrix.target.test != false)
        run: cargo nextest run --verbose --features ${{ matrix.feature }} --target ${{ matrix.target.target }}

      - name: Run tests (cross-compiled)
        if: matrix.target.cross && (matrix.target.test != false)
        run: cargo nextest run --verbose --features ${{ matrix.feature }} --target ${{ matrix.target.target }}
